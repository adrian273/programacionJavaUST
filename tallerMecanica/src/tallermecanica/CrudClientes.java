/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallermecanica;

import java.awt.Frame;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adrian
 */
public class CrudClientes extends javax.swing.JInternalFrame {

    DefaultTableModel dm = new DefaultTableModel();

    /**
     * Creates new form crudClientes
     */
    public CrudClientes() throws ClassNotFoundException, SQLException {
        initComponents();
        loadDataClient();
        this.panelEdicionCliente.setVisible(false);
        this.jpRut.setVisible(false);
    }

    public void loadDataClient() throws ClassNotFoundException, SQLException {
        String titles[] = {"rut", "nombres", "apellidos", "email", "telefono"};
        dm = new DefaultTableModel(titles, 0);
        try {
            Coneccion c = new Coneccion();
            ResultSet res = c.viewClientes();
            if (res.next()) {
                res.beforeFirst(); // regresa al inicio para no perder el 1 er dato
                while (res.next()) {
                    String rut = res.getString("rutCliente");
                    String nombres = res.getString("nombresCliente");
                    String apellidos = res.getString("apellidosCliente");
                    String email = res.getString("emailCliente");
                    String fono = res.getString("fonoCliente");
                    Object dataAll[] = {rut, nombres, apellidos, email, fono};
                    dm.addRow(dataAll);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay datos de clientes", "Error", JOptionPane.ERROR_MESSAGE);
            }
            this.jTable1.setModel(dm);

        } catch (ClassNotFoundException | SQLException e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuTablaCliente = new javax.swing.JPopupMenu();
        jmEliminar = new javax.swing.JMenuItem();
        jmEditar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        modalAgregarNuevoCliente = new javax.swing.JButton();
        btnRefrescar = new javax.swing.JButton();
        panelEdicionCliente = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jtApellido = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtTelefono = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jtEmail = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jpRut = new javax.swing.JPanel();
        jlRut = new javax.swing.JLabel();

        menuTablaCliente.setBorderPainted(false);
        menuTablaCliente.setLabel("");
        menuTablaCliente.setName(""); // NOI18N

        jmEliminar.setText("Eliminar");
        jmEliminar.setToolTipText("");
        jmEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEliminarActionPerformed(evt);
            }
        });
        menuTablaCliente.add(jmEliminar);

        jmEditar.setText("Edicion");
        jmEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEditarActionPerformed(evt);
            }
        });
        menuTablaCliente.add(jmEditar);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Clientes");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setComponentPopupMenu(menuTablaCliente);
        jScrollPane1.setViewportView(jTable1);

        modalAgregarNuevoCliente.setText("Agregar Nuevo Cliente");
        modalAgregarNuevoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modalAgregarNuevoClienteActionPerformed(evt);
            }
        });

        btnRefrescar.setText("Refrescar Tabla");
        btnRefrescar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefrescarActionPerformed(evt);
            }
        });

        panelEdicionCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Edicion de Clientes"));
        panelEdicionCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        panelEdicionCliente.setDoubleBuffered(false);

        jLabel1.setText("nombres");

        jLabel2.setText("apellidos");

        jLabel3.setText("Telefono");

        jLabel4.setText("Email");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEdicionClienteLayout = new javax.swing.GroupLayout(panelEdicionCliente);
        panelEdicionCliente.setLayout(panelEdicionClienteLayout);
        panelEdicionClienteLayout.setHorizontalGroup(
            panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEdicionClienteLayout.createSequentialGroup()
                .addContainerGap(254, Short.MAX_VALUE)
                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(247, 247, 247))
            .addGroup(panelEdicionClienteLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtNombre)
                    .addComponent(jtTelefono, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtApellido)
                    .addComponent(jtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelEdicionClienteLayout.setVerticalGroup(
            panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEdicionClienteLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtApellido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addGap(18, 18, 18)
                .addGroup(panelEdicionClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(33, 33, 33)
                .addComponent(btnActualizar)
                .addContainerGap())
        );

        jpRut.setBorder(javax.swing.BorderFactory.createTitledBorder("Rut Cliente"));

        jlRut.setFont(new java.awt.Font("Dialog", 1, 60)); // NOI18N
        jlRut.setText("00.000.000-0");

        javax.swing.GroupLayout jpRutLayout = new javax.swing.GroupLayout(jpRut);
        jpRut.setLayout(jpRutLayout);
        jpRutLayout.setHorizontalGroup(
            jpRutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpRutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jlRut)
                .addGap(27, 27, 27))
        );
        jpRutLayout.setVerticalGroup(
            jpRutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpRutLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jlRut)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefrescar)
                .addGap(48, 48, 48)
                .addComponent(modalAgregarNuevoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelEdicionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jpRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modalAgregarNuevoCliente)
                    .addComponent(btnRefrescar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(panelEdicionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jpRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     *
     * @param evt Ver modal de agregar cliente
     */
    private void modalAgregarNuevoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modalAgregarNuevoClienteActionPerformed
        // TODO add your handling code here:
        Frame f = new Frame();
        AgregarNuevoCliente anc = new AgregarNuevoCliente(f, true);
        anc.setVisible(true);
    }//GEN-LAST:event_modalAgregarNuevoClienteActionPerformed

    /**
     *
     * @param evt TODO Refrescar la informacion de la tabla
     */
    private void btnRefrescarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefrescarActionPerformed
        try {
            // TODO add your handling code here:
            loadDataClient();
            JOptionPane.showMessageDialog(null, "Tabla Actualizada!", "success", JOptionPane.INFORMATION_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrudClientes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrudClientes.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRefrescarActionPerformed

    /**
     * TODO Eliminar Datos de los clientes
     *
     * @param evt
     */
    private void jmEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEliminarActionPerformed
        // TODO add your handling code here:
        try {
            int reg = this.jTable1.getSelectedRow();
            String valor = (String) this.jTable1.getValueAt(reg, 0);
            int confirm = JOptionPane.showConfirmDialog(null, "¿Estas seguro de eliminar el registro " + valor + "?", "Warning", JOptionPane.WARNING_MESSAGE);
            if (JOptionPane.OK_OPTION == confirm) {
                try {
                    Coneccion c = new Coneccion();
                    String squery = "DELETE from clientes where rutCliente= '"
                            + valor + "';";
                    c.actionRecord(squery);
                    JOptionPane.showMessageDialog(null, "Eliminado Correctamente", "success", JOptionPane.INFORMATION_MESSAGE);
                    loadDataClient();
                } catch (ClassNotFoundException e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                } catch (SQLException ex) {
                    Logger.getLogger(CrudClientes.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        } catch (HeadlessException | ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmEliminarActionPerformed

    private void jmEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEditarActionPerformed
        // TODO add your handling code here:
        try {
            this.panelEdicionCliente.setVisible(true);
            this.jpRut.setVisible(true);
            int reg = this.jTable1.getSelectedRow();
            String rut = (String) this.jTable1.getValueAt(reg, 0);
            String nombre = (String) this.jTable1.getValueAt(reg, 1);
            String apellidos = (String) this.jTable1.getValueAt(reg, 2);
            String email = (String) this.jTable1.getValueAt(reg, 3);
            String telefono = (String) this.jTable1.getValueAt(reg, 4);
            this.jlRut.setText(rut);
            this.jtNombre.setText(nombre);
            this.jtApellido.setText(apellidos);
            this.jtEmail.setText(email);
            this.jtTelefono.setText(telefono);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Selecciona un registro!", "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jmEditarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        try {
            int confirm = JOptionPane.showConfirmDialog(null, "¿Confirmas los datos correctos?", "Warning", JOptionPane.INFORMATION_MESSAGE);
            if (JOptionPane.OK_OPTION == confirm) {

                if (this.jtNombre.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Nombre Requerido!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.jtNombre.requestFocus();
                } else if (this.jtApellido.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Apellido Requerido!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.jtApellido.requestFocus();
                } else if (this.jtEmail.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Email Requerido!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.jtEmail.requestFocus();
                } else if (this.jtTelefono.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "Telefono Requerido!", "Error", JOptionPane.ERROR_MESSAGE);
                    this.jtTelefono.requestFocus();
                } else {
                    Coneccion c = new Coneccion();
                    String query = "UPDATE clientes set nombresCliente = '"
                            + this.jtNombre.getText() + "', apellidosCliente = '"
                            + this.jtApellido.getText() + "', emailCliente = '"
                            + this.jtEmail.getText() + "', fonoCliente = '"
                            + this.jtTelefono.getText() + "' WHERE rutCliente = '"
                            + this.jlRut.getText() + "';";
                    c.actionRecord(query);
                    JOptionPane.showMessageDialog(null, "Editado Correctamente", "success", JOptionPane.INFORMATION_MESSAGE);
                    this.panelEdicionCliente.setVisible(false);
                    this.jpRut.setVisible(false);
                    loadDataClient();
                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrudClientes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(CrudClientes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Selecciona un registro!", "Error", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btnActualizarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnRefrescar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jlRut;
    private javax.swing.JMenuItem jmEditar;
    private javax.swing.JMenuItem jmEliminar;
    private javax.swing.JPanel jpRut;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtEmail;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtTelefono;
    private javax.swing.JPopupMenu menuTablaCliente;
    private javax.swing.JButton modalAgregarNuevoCliente;
    private javax.swing.JPanel panelEdicionCliente;
    // End of variables declaration//GEN-END:variables
}
