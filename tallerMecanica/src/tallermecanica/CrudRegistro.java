package tallermecanica;

import java.awt.Frame;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import tallermecanica.Modals.AddNewRegistroModal;
import tallermecanica.Models.RegistroModel;

/**
 *
 * @author adrian verdugo
 */
public class CrudRegistro extends javax.swing.JInternalFrame {

    DefaultTableModel dm;
    RegistroModel rm;

    /**
     * Creates new form CrudRegistro
     */
    public CrudRegistro() throws ClassNotFoundException {
        initComponents();
        dm = new DefaultTableModel();
        rm = new RegistroModel();
        loadDataRegistro();
    }

    /**
     * TODO cargar datos de los registros en la tabla
     */
    public void loadDataRegistro() {
        String titles[] = {"Numero Registro", "Fecha", "Descripcion", "Patente", "Cliente", "Total"};
        dm = new DefaultTableModel(titles, 0);
        try {
            ResultSet vData = rm.dataRegistro();
            if (vData.next()) {
                vData.beforeFirst();
                while (vData.next()) {
                    String nRegistro = vData.getString("idRegistro");
                    String fecha = vData.getString("fechaRegistro");
                    String descripcion = vData.getString("descripcionRegistro");

                    String patente = vData.getString("patenteVehiculo");
                    String nCliente = vData.getString("nombresCliente") + " " + vData.getString("apellidosCliente");
                    String total = vData.getString("totalCobroRegistro");
                    Object dataAll[] = {nRegistro, fecha, descripcion, patente, nCliente, total};
                    this.dm.addRow(dataAll);
                }
                this.dataTableRegistro.setModel(dm);
            } else {
                JOptionPane.showMessageDialog(null, "No hay datos ingresados!", "Error", JOptionPane.WARNING_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainRegistroTable = new javax.swing.JPopupMenu();
        jmEliminar = new javax.swing.JMenuItem();
        jmEditar = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTableRegistro = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnAddNewRegistro = new javax.swing.JButton();

        jmEliminar.setText("Eliminar");
        jmEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmEliminarActionPerformed(evt);
            }
        });
        mainRegistroTable.add(jmEliminar);

        jmEditar.setText("Editar");
        mainRegistroTable.add(jmEditar);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Crud Registro");
        setPreferredSize(new java.awt.Dimension(1239, 536));

        dataTableRegistro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        dataTableRegistro.setComponentPopupMenu(mainRegistroTable);
        jScrollPane1.setViewportView(dataTableRegistro);

        btnRefresh.setText("Refrescar");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnAddNewRegistro.setText("Agregar Nuevo Registro");
        btnAddNewRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewRegistroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1216, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addGap(29, 29, 29)
                .addComponent(btnAddNewRegistro)
                .addGap(135, 135, 135))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefresh)
                    .addComponent(btnAddNewRegistro))
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * TODO refrescar datos de la tabla
     *
     * @param evt
     */
    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        loadDataRegistro();
        JOptionPane.showMessageDialog(null, "Tabla refrescada!", "Info", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_btnRefreshActionPerformed

    /**
     * TODO llamar el modal para agregar el nuevo modal
     *
     * @param evt
     */
    private void btnAddNewRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewRegistroActionPerformed
        // TODO add your handling code here:
        try {
            Frame f = new Frame();
            AddNewRegistroModal rm = new AddNewRegistroModal(f, true);
            rm.setVisible(true);
        } catch (HeadlessException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(CrudRegistro.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddNewRegistroActionPerformed

    /**
     * Eliminar Registro Seleccionado
     * @param evt
     */
    private void jmEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmEliminarActionPerformed
        // TODO add your handling code here
        try {
            int registro = this.dataTableRegistro.getSelectedRow();
            String ident = (String) this.dataTableRegistro.getValueAt(registro, 0);
            int confirmar = JOptionPane.showConfirmDialog(null, "Â¿Estas seguro de eliminar este registro?", "Warnig", JOptionPane.WARNING_MESSAGE);
            if (JOptionPane.OK_OPTION == confirmar) {
                try {
                    rm.deleteRegistro(Integer.parseInt(ident));
                    JOptionPane.showMessageDialog(null, "Eliminado correctamente", "Success", JOptionPane.INFORMATION_MESSAGE);
                    loadDataRegistro();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (HeadlessException | NumberFormatException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ArrayIndexOutOfBoundsException a) {
            JOptionPane.showMessageDialog(null, "Seleccione una fila", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jmEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewRegistro;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JTable dataTableRegistro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmEditar;
    private javax.swing.JMenuItem jmEliminar;
    private javax.swing.JPopupMenu mainRegistroTable;
    // End of variables declaration//GEN-END:variables
}
