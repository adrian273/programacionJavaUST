/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tallermecanica.Modals;

import java.io.FileWriter;
import java.io.PrintWriter;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import tallermecanica.Models.RegistroModel;

/**
 *
 * @author adrian
 */
public class AddNewExportarCliAuto extends javax.swing.JDialog {
    RegistroModel rm;
    /**
     * Creates new form AddNewExportarCliAuto
     */
    public AddNewExportarCliAuto(java.awt.Frame parent, boolean modal) throws ClassNotFoundException {
        super(parent, modal);
        initComponents();
        rm = new RegistroModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jtRut = new javax.swing.JTextField();
        jtPatente = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Rut Cliente");

        jLabel2.setText("Patente Automovil");

        jButton1.setText("Exportar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jtRut)
                    .addComponent(jtPatente)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE))
                .addContainerGap(126, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(jtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtPatente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addComponent(jButton1)
                .addContainerGap(85, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {
            String rut = this.jtRut.getText();
            String patente = this.jtPatente.getText();
            Date date = new Date();
            DateFormat df = new SimpleDateFormat("yy-MM-dd.HH_mm_ss");
            DateFormat dfDos = new SimpleDateFormat("yy-MM-dd HH:mm:ss");
            String outFile = "docs/registroAutomovilCliente.txt";
            FileWriter fichero = null;
            PrintWriter pw = null;
            try {
                ResultSet rs = rm.RegistroCliAuto(rut, patente);
                fichero = new FileWriter(outFile);
                pw = new PrintWriter(fichero);
                pw.write("Fecha de exportacion de registro: " + dfDos.format(date));
                pw.write("\n");
                pw.write("\n");
                pw.write("\n");
                while (rs.next()) {
                    pw.write("Numero Docs: " + rs.getString("idRegistro"));
                    pw.write("\n");
                    pw.write("Fecha Registro: " + rs.getString("fechaRegistro"));
                    pw.write("\n");
                    pw.write("Costo : " + rs.getString("totalCobroRegistro"));
                    pw.write("\n");
                    pw.write("Nombre Cliente: " + rs.getString("nombresCliente") + " " + rs.getString("apellidosCliente"));
                    pw.write("\n");
                    pw.write("Rut Cliente: " + rs.getString("rutCliente"));
                    pw.write("\n");
                    pw.write("Patente: " + rs.getString("patenteVehiculo"));
                    pw.write("\n");
                    pw.write("Modelo: " + rs.getString("modelo"));
                    pw.write("\n");
                    pw.write("AÃ±o: " + rs.getString("yearVehiculo"));
                    pw.write("\n");
                    pw.write("Descripcion: " + rs.getString("descripcionRegistro"));
                    pw.write("\n");
                    pw.write("------------------------------------------------------------");
                    pw.write("\n");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                try {
                    if (null != fichero) {
                        fichero.close();
                        JOptionPane.showMessageDialog(null, "Archivo Exportado con exito en la carpeta ./" + outFile, "Info", JOptionPane.INFORMATION_MESSAGE);
                    }
                } catch (Exception ee) {
                    JOptionPane.showMessageDialog(null, ee.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewExportarCliAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewExportarCliAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewExportarCliAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewExportarCliAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddNewExportarCliAuto dialog = null;
                try {
                    dialog = new AddNewExportarCliAuto(new javax.swing.JFrame(), true);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(AddNewExportarCliAuto.class.getName()).log(Level.SEVERE, null, ex);
                }
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jtPatente;
    private javax.swing.JTextField jtRut;
    // End of variables declaration//GEN-END:variables
}
